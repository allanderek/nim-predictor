[x] Create the sqlite database just to hold the formula-e predictions.
[x] It will need tables for the drivers, teams, entrants and races.
[x] Create a nim web application that just serves a simple hello world
[x] Hook it up to the database so that it can show the drivers, teams, entrants and races.
[x] Allow the posting of predictions
[ ] Restrict posting to races which have entry open.
[ ] Allow admins to enter the race results
[ ] Score predictions and present scores for the race
[ ] Score predictions and present a leaderboard 
[ ] Get some better types going, parse early, wrap late.
[ ] Can I break this by entering in a user name with bobby tables.
[ ] What about a user name with a script tag?
[ ] Do we need to collect email addresses of users? Probably.


Next steps:
* The first thing is actual errors in showRace, for things such as making a prediction too late etc. Check out the login errors for an example of how to do this here.  
* In particular we need a good error message when not logged-in (and it shouldn't log the prediction as an anonymous one).
* The single race scoreboard should use the 'Full name' rather than 'username' just as the full leaderboard does.
* The race page should show the round number, and starting data/time, it was difficult to know which Diryah race we were on.
* Need someway to reload the page when the race starts, or at least prevent entry
* Need someway to prevent someone entering a guess with the same drivers in first/second/third.
* Could try doing this in Elm with a json backend.
* Check what happens when you show a race that is past the deadline but has no results.
* Maybe have a rules page, I think what James and I have agreed:
  1. You cannot have the same driver in any of 1,2,3 positions.
  2. But you may have the same driver anywhere else, it's technically possible for a driver to be pole and HGC (if all drivers stay in the same position then the HGC is 0, and the winner of the race is the highest of those). I don't think it's possible to win the race and be FDNF (but probably is technically possible to be 2nd or 3rd, due to lapping everyone else and DNF'ing on the final lap). Nonetheless we've decided that if you want to predict in that fashion, that's okay. 
  3. FDNF is basically just 'last', since if there are no DNFs then we take the 'last' position to be the FDNF. However, it's important to note that DNS is **not** a DNF. So it's "last of those drivers that started the race". In practice, this is typically FDNF.

Obviously, you have to make sure all this is actually working as a website. Do a dummy race first. But just as you did before.


Formula-one:

* In addition, why is the score not showing? It should show already just from entering the predictions, without even submitting them? - It's because we don't get the input ones because we don't want them for predictions, suppose someone fiddles with their predictions but doesn't submit them before the deadline, we want to be scoring the ones stored on the server, *not* the input ones.
* Correctly score the fastestLap, it's just if the entrant is correct, not also in the correct place.
*  When we submit predictions, successfully, we need to remove them from the 'input', otherwise if the are updated on the server by someone else, we won't see that because we will still view the 'input' ones.

* Enter in the data for the events of the 2024 calendar, do a similar thing that we did for formula-e to get the (predicted) entrants for each session.


* Need to improve the login and general routing for formulaone.

* Predictions for a session may become stale, in that the entrants have changed and hence the predictions are no longer valid. I think in that case, we just need to make sure that at least all of the valid entrants are included, and possibly mark those that are invalid, or simply remove them.

* I think the schema will have to have entrants that are in-active. Otherwise predictions which have been entered will prevent the inactive entrant from being deleted. 


plan:
    * followed by the leaderboard (in SQL), and probably the scoring of predictions, possibily just in Elm (so that they can change without sending the result to the server.


* season predictions - the button should be disabled if you haven't changed anything from your stored predictions.

Do this once we're a bit closer to having a definite schema that we want to stick with, otherwise we'll have to do it again, or start being more careful with migratable changes to the database.
    * I think actually, I can just put the current predictions/results into the schema file.
    * In litecli change all the passwords to be the same as mine, and the two Mexican grand prixs to have later start times.
    * Using the web interface sign-in as each player and record the two sets of predictions
    * change the two mexican times back, and enter the results for both.
    * change the passwords back to what they are in the actual database (check full names as well).

